{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_SOFTWARE_ENGINEERING\\\\FYP\\\\des\\\\packages\\\\shop\\\\components\\\\GiftCard\\\\GiftCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Image from 'react-image';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { FormattedMessage } from 'react-intl';\nimport { GiftCardWrapper, GiftCardImageWrapper, CardInfo, CardContent, CopyButton, GiftCode, CopySuccess } from './GiftCard.style';\n\nconst GiftCard = (_ref) => {\n  let {\n    image,\n    weight,\n    onClick,\n    onChange,\n    code\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"image\", \"weight\", \"onClick\", \"onChange\", \"code\"]);\n\n  const {\n    0: copyText,\n    1: setCopyText\n  } = useState({\n    value: code,\n    copied: false\n  });\n  const codeRef = useRef(null);\n  useEffect(() => {\n    if (copyText.copied) {\n      setTimeout(() => {\n        setCopyText(_objectSpread({}, copyText, {\n          copied: false\n        }));\n      }, 3500);\n    }\n  }, [copyText.copied]);\n  return __jsx(GiftCardWrapper, _extends({}, props, {\n    className: \"product-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), __jsx(GiftCardImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: image,\n    className: \"gift-image\",\n    alt: \"gift image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), __jsx(CardInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(GiftCode, {\n    ref: codeRef,\n    value: copyText.value,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), !copyText.copied ? __jsx(CopyToClipboard, {\n    text: copyText.value,\n    onCopy: () => setCopyText(_objectSpread({}, copyText, {\n      copied: true\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(CopyButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlCopyBtnId\",\n    defaultMessage: \"Copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }))) : __jsx(CopySuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlCopySuccessId\",\n    defaultMessage: \"Copied!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default GiftCard;","map":{"version":3,"sources":["E:/FYP_SOFTWARE_ENGINEERING/FYP/des/packages/shop/components/GiftCard/GiftCard.tsx"],"names":["React","useRef","useState","useEffect","Image","CopyToClipboard","FormattedMessage","GiftCardWrapper","GiftCardImageWrapper","CardInfo","CardContent","CopyButton","GiftCode","CopySuccess","GiftCard","image","weight","onClick","onChange","code","props","copyText","setCopyText","value","copied","codeRef","setTimeout"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SACEC,eADF,EAEEC,oBAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,WAPF,QAQO,kBARP;;AAkBA,MAAMC,QAAiC,GAAG,UAOpC;AAAA,MAPqC;AACzCC,IAAAA,KADyC;AAEzCC,IAAAA,MAFyC;AAGzCC,IAAAA,OAHyC;AAIzCC,IAAAA,QAJyC;AAKzCC,IAAAA;AALyC,GAOrC;AAAA,MADDC,KACC;;AACJ,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC;AACvCqB,IAAAA,KAAK,EAAEJ,IADgC;AAEvCK,IAAAA,MAAM,EAAE;AAF+B,GAAD,CAAxC;AAIA,QAAMC,OAAO,GAAGxB,MAAM,CAAC,IAAD,CAAtB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,QAAQ,CAACG,MAAb,EAAqB;AACnBE,MAAAA,UAAU,CAAC,MAAM;AACfJ,QAAAA,WAAW,mBACND,QADM;AAETG,UAAAA,MAAM,EAAE;AAFC,WAAX;AAID,OALS,EAKP,IALO,CAAV;AAMD;AACF,GATQ,EASN,CAACH,QAAQ,CAACG,MAAV,CATM,CAAT;AAWA,SACE,MAAC,eAAD,eAAqBJ,KAArB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEL,KAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA0C,IAAA,GAAG,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEU,OAAf;AAAwB,IAAA,KAAK,EAAEJ,QAAQ,CAACE,KAAxC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGG,CAACF,QAAQ,CAACG,MAAV,GACC,MAAC,eAAD;AACE,IAAA,IAAI,EAAEH,QAAQ,CAACE,KADjB;AAEE,IAAA,MAAM,EAAE,MACND,WAAW,mBACND,QADM;AAETG,MAAAA,MAAM,EAAE;AAFC,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADD,GAeC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,cAAc,EAAC,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBJ,CADF,CAJF,CADF;AAmCD,CA5DD;;AA8DA,eAAeV,QAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport Image from 'react-image';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {\r\n  GiftCardWrapper,\r\n  GiftCardImageWrapper,\r\n  CardInfo,\r\n  CardContent,\r\n  CopyButton,\r\n  GiftCode,\r\n  CopySuccess,\r\n} from './GiftCard.style';\r\n\r\ntype GiftCardProps = {\r\n  image?: any;\r\n  weight?: string;\r\n  code?: any;\r\n  onClick?: (e: any) => void;\r\n  onChange?: (e: any) => void;\r\n};\r\n\r\nconst GiftCard: React.FC<GiftCardProps> = ({\r\n  image,\r\n  weight,\r\n  onClick,\r\n  onChange,\r\n  code,\r\n  ...props\r\n}) => {\r\n  const [copyText, setCopyText] = useState({\r\n    value: code,\r\n    copied: false,\r\n  });\r\n  const codeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (copyText.copied) {\r\n      setTimeout(() => {\r\n        setCopyText({\r\n          ...copyText,\r\n          copied: false,\r\n        });\r\n      }, 3500);\r\n    }\r\n  }, [copyText.copied]);\r\n\r\n  return (\r\n    <GiftCardWrapper {...props} className='product-card'>\r\n      <GiftCardImageWrapper>\r\n        <Image src={image} className='gift-image' alt='gift image' />\r\n      </GiftCardImageWrapper>\r\n      <CardInfo>\r\n        <CardContent>\r\n          <GiftCode ref={codeRef} value={copyText.value} readOnly />\r\n\r\n          {!copyText.copied ? (\r\n            <CopyToClipboard\r\n              text={copyText.value}\r\n              onCopy={() =>\r\n                setCopyText({\r\n                  ...copyText,\r\n                  copied: true,\r\n                })\r\n              }\r\n            >\r\n              <CopyButton>\r\n                <FormattedMessage id='intlCopyBtnId' defaultMessage='Copy' />\r\n              </CopyButton>\r\n            </CopyToClipboard>\r\n          ) : (\r\n            <CopySuccess>\r\n              <FormattedMessage\r\n                id='intlCopySuccessId'\r\n                defaultMessage='Copied!'\r\n              />\r\n            </CopySuccess>\r\n          )}\r\n        </CardContent>\r\n      </CardInfo>\r\n    </GiftCardWrapper>\r\n  );\r\n};\r\n\r\nexport default GiftCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_SOFTWARE_ENGINEERING\\\\FYP\\\\des\\\\packages\\\\shop\\\\containers\\\\Products\\\\ProductsMedicine.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport gql from 'graphql-tag';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport ProductCard from 'components/MedicineCard/MedicineCard';\nimport { ProductsRow, MedicineCol, ButtonWrapper, LoaderWrapper, LoaderItem, ProductCardWrapper } from './Products.style';\nimport { CURRENCY } from 'helper/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/NoResult/NoResult';\nimport Image1 from '../../image/med-1.jpg';\nimport Image2 from '../../image/med-2.jpg';\nimport Image3 from '../../image/med-3.jpg';\nconst QuickView = dynamic(() => import('../QuickView/QuickView'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../QuickView/QuickView')],\n    modules: ['../QuickView/QuickView']\n  }\n});\nconst GET_PRODUCTS = gql`\n  query getProducts(\n    $type: String\n    $text: String\n    $category: String\n    $offset: Int\n    $limit: Int\n  ) {\n    products(\n      type: $type\n      text: $text\n      category: $category\n      offset: $offset\n      limit: $limit\n    ) {\n      items {\n        id\n        title\n        slug\n        unit\n        price\n        salePrice\n        description\n        discountInPercent\n        type\n        image\n        gallery {\n          url\n        }\n        categories {\n          id\n          title\n          slug\n        }\n      }\n      hasMore\n    }\n  }\n`;\nconst dummyData = [{\n  title: 'Puffs plus lotion',\n  image: Image1,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 8,\n  unit: '1 pc'\n}, {\n  title: 'Dove man care',\n  image: Image3,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Puffs plus lotion',\n  image: Image1,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Dove man care',\n  image: Image3,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Puffs plus lotion',\n  image: Image1,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Dove man care',\n  image: Image3,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Puffs plus lotion',\n  image: Image1,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Dove man care',\n  image: Image3,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Puffs plus lotion',\n  image: Image1,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Dove man care',\n  image: Image3,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}, {\n  title: 'Malek Tissue',\n  image: Image2,\n  currency: CURRENCY,\n  price: 12,\n  unit: '1 pc'\n}];\nexport const Products = ({\n  deviceType,\n  type,\n  fetchLimit = 8,\n  loadMore = true\n}) => {\n  const router = useRouter();\n  const {\n    0: loadingMore,\n    1: toggleLoading\n  } = useState(false);\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      text: router.query.text,\n      category: router.query.category,\n      offset: 0,\n      limit: fetchLimit\n    }\n  }); // Quick View Modal\n\n  const handleModalClose = () => {\n    const href = `${router.pathname}`;\n    const as = '/';\n    router.push(href, as, {\n      shallow: true\n    });\n    closeModal();\n  };\n\n  const handleQuickViewModal = React.useCallback((modalProps, deviceType, onModalClose) => {\n    if (router.pathname === '/product/[slug]') {\n      const as = `/product/${modalProps.slug}`;\n      router.push(router.pathname, as);\n      return;\n    }\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: false,\n      component: QuickView,\n      componentProps: {\n        modalProps,\n        deviceType,\n        onModalClose\n      },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0\n        }\n      }\n    });\n    const href = `${router.pathname}?${modalProps.slug}`;\n    const as = `/product/${modalProps.slug}`;\n    router.push(href, as, {\n      shallow: true\n    });\n  }, []);\n\n  if (loading) {\n    return __jsx(LoaderWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, error.message);\n\n  if (!data || !data.products || data.products.items.length === 0) {\n    return __jsx(NoResultFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.products.items.length),\n        limit: fetchLimit\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        toggleLoading(false);\n\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        return {\n          products: {\n            __typename: prev.products.__typename,\n            items: [...prev.products.items, ...fetchMoreResult.products.items],\n            hasMore: fetchMoreResult.products.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, data.products.items.map((item, index) => __jsx(MedicineCol, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(ProductCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, __jsx(Fade, {\n    duration: 800,\n    delay: index * 10,\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, __jsx(ProductCard, {\n    title: item.title,\n    currency: CURRENCY,\n    image: item.image,\n    price: item.price,\n    weight: item.unit,\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  })))))), loadMore && data.products.hasMore && __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleLoadMore,\n    title: \"Load More\",\n    size: \"small\",\n    isLoading: loadingMore,\n    intlButtonId: \"loadMoreBtn\",\n    loader: __jsx(Loader, {\n      color: \"#00b5f4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }),\n    style: {\n      minWidth: 135,\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#00b5f4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  })));\n};\nexport default Products;","map":{"version":3,"sources":["E:/FYP_SOFTWARE_ENGINEERING/FYP/des/packages/shop/containers/Products/ProductsMedicine.tsx"],"names":["React","useState","useRouter","dynamic","gql","openModal","closeModal","ProductCard","ProductsRow","MedicineCol","ButtonWrapper","LoaderWrapper","LoaderItem","ProductCardWrapper","CURRENCY","useQuery","Button","Loader","Placeholder","Fade","NoResultFound","Image1","Image2","Image3","QuickView","GET_PRODUCTS","dummyData","title","image","currency","price","unit","Products","deviceType","type","fetchLimit","loadMore","router","loadingMore","toggleLoading","data","error","loading","fetchMore","variables","text","query","category","offset","limit","handleModalClose","href","pathname","as","push","shallow","handleQuickViewModal","useCallback","modalProps","onModalClose","slug","show","overlayClassName","closeOnClickOutside","component","componentProps","closeComponent","config","enableResizing","disableDragging","className","width","y","height","transition","mass","tension","friction","message","products","items","length","handleLoadMore","Number","updateQuery","prev","fetchMoreResult","__typename","hasMore","map","item","index","minWidth","backgroundColor","border","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport gql from 'graphql-tag';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport ProductCard from 'components/MedicineCard/MedicineCard';\r\nimport {\r\n  ProductsRow,\r\n  MedicineCol,\r\n  ButtonWrapper,\r\n  LoaderWrapper,\r\n  LoaderItem,\r\n  ProductCardWrapper,\r\n} from './Products.style';\r\nimport { CURRENCY } from 'helper/constant';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Button from 'components/Button/Button';\r\nimport Loader from 'components/Loader/Loader';\r\nimport Placeholder from 'components/Placeholder/Placeholder';\r\nimport Fade from 'react-reveal/Fade';\r\nimport NoResultFound from 'components/NoResult/NoResult';\r\nimport Image1 from '../../image/med-1.jpg';\r\nimport Image2 from '../../image/med-2.jpg';\r\nimport Image3 from '../../image/med-3.jpg';\r\n\r\nconst QuickView = dynamic(() => import('../QuickView/QuickView'));\r\n\r\nconst GET_PRODUCTS = gql`\r\n  query getProducts(\r\n    $type: String\r\n    $text: String\r\n    $category: String\r\n    $offset: Int\r\n    $limit: Int\r\n  ) {\r\n    products(\r\n      type: $type\r\n      text: $text\r\n      category: $category\r\n      offset: $offset\r\n      limit: $limit\r\n    ) {\r\n      items {\r\n        id\r\n        title\r\n        slug\r\n        unit\r\n        price\r\n        salePrice\r\n        description\r\n        discountInPercent\r\n        type\r\n        image\r\n        gallery {\r\n          url\r\n        }\r\n        categories {\r\n          id\r\n          title\r\n          slug\r\n        }\r\n      }\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nconst dummyData = [\r\n  {\r\n    title: 'Puffs plus lotion',\r\n    image: Image1,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 8,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Dove man care',\r\n    image: Image3,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Puffs plus lotion',\r\n    image: Image1,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Dove man care',\r\n    image: Image3,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Puffs plus lotion',\r\n    image: Image1,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Dove man care',\r\n    image: Image3,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Puffs plus lotion',\r\n    image: Image1,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Dove man care',\r\n    image: Image3,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Puffs plus lotion',\r\n    image: Image1,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Dove man care',\r\n    image: Image3,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n  {\r\n    title: 'Malek Tissue',\r\n    image: Image2,\r\n    currency: CURRENCY,\r\n    price: 12,\r\n    unit: '1 pc',\r\n  },\r\n];\r\n\r\ntype ProductsProps = {\r\n  deviceType?: {\r\n    mobile: boolean;\r\n    tablet: boolean;\r\n    desktop: boolean;\r\n  };\r\n  type: string;\r\n  fetchLimit?: number;\r\n  loadMore?: boolean;\r\n};\r\nexport const Products: React.FC<ProductsProps> = ({\r\n  deviceType,\r\n  type,\r\n  fetchLimit = 8,\r\n  loadMore = true,\r\n}) => {\r\n  const router = useRouter();\r\n  const [loadingMore, toggleLoading] = useState(false);\r\n  const { data, error, loading, fetchMore } = useQuery(GET_PRODUCTS, {\r\n    variables: {\r\n      type: type,\r\n      text: router.query.text,\r\n      category: router.query.category,\r\n      offset: 0,\r\n      limit: fetchLimit,\r\n    },\r\n  });\r\n\r\n  // Quick View Modal\r\n  const handleModalClose = () => {\r\n    const href = `${router.pathname}`;\r\n    const as = '/';\r\n    router.push(href, as, { shallow: true });\r\n    closeModal();\r\n  };\r\n  const handleQuickViewModal = React.useCallback(\r\n    (modalProps: any, deviceType: any, onModalClose: any) => {\r\n      if (router.pathname === '/product/[slug]') {\r\n        const as = `/product/${modalProps.slug}`;\r\n        router.push(router.pathname, as);\r\n        return;\r\n      }\r\n      openModal({\r\n        show: true,\r\n        overlayClassName: 'quick-view-overlay',\r\n        closeOnClickOutside: false,\r\n        component: QuickView,\r\n        componentProps: { modalProps, deviceType, onModalClose },\r\n        closeComponent: 'div',\r\n        config: {\r\n          enableResizing: false,\r\n          disableDragging: true,\r\n          className: 'quick-view-modal',\r\n          width: 900,\r\n          y: 30,\r\n          height: 'auto',\r\n          transition: {\r\n            mass: 1,\r\n            tension: 0,\r\n            friction: 0,\r\n          },\r\n        },\r\n      });\r\n      const href = `${router.pathname}?${modalProps.slug}`;\r\n      const as = `/product/${modalProps.slug}`;\r\n      router.push(href, as, { shallow: true });\r\n    },\r\n    []\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <LoaderWrapper>\r\n        <LoaderItem>\r\n          <Placeholder />\r\n        </LoaderItem>\r\n        <LoaderItem>\r\n          <Placeholder />\r\n        </LoaderItem>\r\n        <LoaderItem>\r\n          <Placeholder />\r\n        </LoaderItem>\r\n      </LoaderWrapper>\r\n    );\r\n  }\r\n\r\n  if (error) return <div>{error.message}</div>;\r\n  if (!data || !data.products || data.products.items.length === 0) {\r\n    return <NoResultFound />;\r\n  }\r\n  const handleLoadMore = () => {\r\n    toggleLoading(true);\r\n    fetchMore({\r\n      variables: {\r\n        offset: Number(data.products.items.length),\r\n        limit: fetchLimit,\r\n      },\r\n      updateQuery: (prev, { fetchMoreResult }) => {\r\n        toggleLoading(false);\r\n        if (!fetchMoreResult) {\r\n          return prev;\r\n        }\r\n        return {\r\n          products: {\r\n            __typename: prev.products.__typename,\r\n            items: [...prev.products.items, ...fetchMoreResult.products.items],\r\n            hasMore: fetchMoreResult.products.hasMore,\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProductsRow>\r\n        {/* {dummyData.map((item: any, index: number) => ( */}\r\n        {data.products.items.map((item: any, index: number) => (\r\n          <MedicineCol key={index}>\r\n            <ProductCardWrapper>\r\n              <Fade\r\n                duration={800}\r\n                delay={index * 10}\r\n                style={{ height: '100%' }}\r\n              >\r\n                <ProductCard\r\n                  title={item.title}\r\n                  currency={CURRENCY}\r\n                  image={item.image}\r\n                  price={item.price}\r\n                  weight={item.unit}\r\n                  data={item}\r\n                />\r\n              </Fade>\r\n            </ProductCardWrapper>\r\n          </MedicineCol>\r\n        ))}\r\n      </ProductsRow>\r\n      {loadMore && data.products.hasMore && (\r\n        <ButtonWrapper>\r\n          <Button\r\n            onClick={handleLoadMore}\r\n            title='Load More'\r\n            size='small'\r\n            isLoading={loadingMore}\r\n            intlButtonId='loadMoreBtn'\r\n            loader={<Loader color='#00b5f4' />}\r\n            style={{\r\n              minWidth: 135,\r\n              backgroundColor: '#ffffff',\r\n              border: '1px solid #f1f1f1',\r\n              color: '#00b5f4',\r\n            }}\r\n          />\r\n        </ButtonWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}
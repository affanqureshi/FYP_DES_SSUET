{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\FYP_SOFTWARE_ENGINEERING\\\\FYP\\\\des\\\\packages\\\\shop\\\\containers\\\\CheckoutWithSidebar\\\\Update\\\\UpdateContact.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\nvar ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nvar CreateOrUpdateContact = function CreateOrUpdateContact(_ref) {\n  var item = _ref.item;\n  var initialValues = {\n    id: item.id || null,\n    type: item.type || 'secondary',\n    number: item.number || ''\n  };\n\n  var _useMutation = useMutation(UPDATE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addContactMutation = _useMutation2[0];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = function handleSubmit(values, _ref2) {\n    var setSubmitting;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitting = _ref2.setSubmitting;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(addContactMutation({\n              variables: {\n                contactInput: JSON.stringify(values)\n              }\n            }));\n\n          case 3:\n            console.log(values, 'formik values');\n            dispatch({\n              type: 'ADD_OR_UPDATE_CONTACT',\n              payload: values\n            });\n            closeModal();\n            setSubmitting(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, item && item.id ? 'Edit Contact' : 'Add New Contact'), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(MaskedInput, {\n      mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n      className: \"form-control\",\n      placeholder: \"Enter a phone number\",\n      guide: false,\n      id: \"my-input-id\",\n      value: values.number,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      name: \"number\",\n      render: function render(ref, props) {\n        return __jsx(StyledInput, _extends({\n          ref: ref\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: StyledError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      title: \"Save Contact\",\n      size: \"medium\",\n      fullwidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\nexport default CreateOrUpdateContact;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"UpdateContact__StyledInput\",\n  componentId: \"sc-196y1x0-0\"\n})([\"width:100%;height:54px;border-radius:6px;font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:400;padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('colors.fontFamily', 'Lato, sans-serif'), themeGet('colors.borderColor', '#e6e6e6'), themeGet('colors.darkBold', '#0D1136'), themeGet('colors.primary', '#009e7f'), themeGet('colorsdarkRegular', '#77798C'));\nvar StyledError = styled.div.withConfig({\n  displayName: \"UpdateContact__StyledError\",\n  componentId: \"sc-196y1x0-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":{"version":3,"sources":["E:/FYP_SOFTWARE_ENGINEERING/FYP/des/packages/shop/containers/CheckoutWithSidebar/Update/UpdateContact.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","MaskedInput","ProfileContext","Button","UPDATE_CONTACT","FieldWrapper","Heading","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","initialValues","id","type","addContactMutation","state","dispatch","handleSubmit","values","setSubmitting","variables","contactInput","JSON","stringify","console","log","payload","handleChange","handleBlur","isSubmitting","ref","props","StyledError","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport * as Yup from 'yup';\r\nimport { closeModal } from '@redq/reuse-modal';\r\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { ProfileContext } from 'contexts/profile/profile.context';\r\nimport Button from 'components/Button/Button';\r\nimport { UPDATE_CONTACT } from 'graphql/mutation/contact';\r\nimport { FieldWrapper, Heading } from './Update.style';\r\n\r\ntype Props = {\r\n  item?: any | null;\r\n};\r\n// Shape of form values\r\ntype FormValues = {\r\n  id?: number | null;\r\n  type?: string;\r\n  number?: string;\r\n};\r\n\r\nconst ContactValidationSchema = Yup.object().shape({\r\n  number: Yup.string().required('Number is required'),\r\n});\r\n\r\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\r\n  const initialValues = {\r\n    id: item.id || null,\r\n    type: item.type || 'secondary',\r\n    number: item.number || '',\r\n  };\r\n  const [addContactMutation] = useMutation(UPDATE_CONTACT);\r\n  const { state, dispatch } = useContext(ProfileContext);\r\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\r\n    await addContactMutation({\r\n      variables: { contactInput: JSON.stringify(values) },\r\n    });\r\n    console.log(values, 'formik values');\r\n    dispatch({ type: 'ADD_OR_UPDATE_CONTACT', payload: values });\r\n    closeModal();\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={ContactValidationSchema}\r\n    >\r\n      {({\r\n        values,\r\n        handleChange,\r\n        handleBlur,\r\n        isSubmitting,\r\n      }: FormikProps<FormValues>) => (\r\n        <Form>\r\n          <Heading>\r\n            {item && item.id ? 'Edit Contact' : 'Add New Contact'}\r\n          </Heading>\r\n          <FieldWrapper>\r\n            <MaskedInput\r\n              mask={[\r\n                '(',\r\n                /[1-9]/,\r\n                /\\d/,\r\n                /\\d/,\r\n                ')',\r\n                ' ',\r\n                /\\d/,\r\n                /\\d/,\r\n                /\\d/,\r\n                '-',\r\n                /\\d/,\r\n                /\\d/,\r\n                /\\d/,\r\n                /\\d/,\r\n              ]}\r\n              className='form-control'\r\n              placeholder='Enter a phone number'\r\n              guide={false}\r\n              id='my-input-id'\r\n              value={values.number}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              name='number'\r\n              render={(ref: any, props: {}) => (\r\n                <StyledInput ref={ref} {...props} />\r\n              )}\r\n            />\r\n          </FieldWrapper>\r\n          <ErrorMessage name='number' component={StyledError} />\r\n\r\n          <Button\r\n            disabled={isSubmitting}\r\n            type='submit'\r\n            title='Save Contact'\r\n            size='medium'\r\n            fullwidth={true}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CreateOrUpdateContact;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 54px;\r\n  border-radius: 6px;\r\n  font-family: ${themeGet('colors.fontFamily', 'Lato, sans-serif')};\r\n  border: 1px solid ${themeGet('colors.borderColor', '#e6e6e6')};\r\n  color: ${themeGet('colors.darkBold', '#0D1136')};\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  font-weight: 400;\r\n  padding: 0 18px;\r\n  box-sizing: border-box;\r\n  transition: border-color 0.25s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: ${themeGet('colors.primary', '#009e7f')};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${themeGet('colorsdarkRegular', '#77798C')};\r\n  }\r\n`;\r\n\r\nconst StyledError = styled.div`\r\n  color: red;\r\n  padding-bottom: 10px;\r\n  margin-top: -5px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
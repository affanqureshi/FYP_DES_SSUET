{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\FYP_SOFTWARE_ENGINEERING\\\\FYP\\\\des\\\\packages\\\\shop\\\\pages\\\\checkout-alternative.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { withApollo } from 'helper/apollo';\nimport { SEO } from 'components/seo';\nimport Checkout from 'containers/Checkout/Checkout';\nimport { GET_LOGGED_IN_CUSTOMER } from 'graphql/query/customer.query';\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\n\nvar CheckoutPage = function CheckoutPage(_ref) {\n  var deviceType = _ref.deviceType;\n\n  var _useQuery = useQuery(GET_LOGGED_IN_CUSTOMER),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, error.message);\n  var token = 'true';\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Checkout Alternative - PickBazar\",\n    description: \"Checkout Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(ProfileProvider, {\n    initData: data.me,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Modal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Checkout, {\n    token: token,\n    deviceType: deviceType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default withApollo(CheckoutPage);","map":{"version":3,"sources":["E:/FYP_SOFTWARE_ENGINEERING/FYP/des/packages/shop/pages/checkout-alternative.tsx"],"names":["React","useQuery","Modal","withApollo","SEO","Checkout","GET_LOGGED_IN_CUSTOMER","ProfileProvider","CheckoutPage","deviceType","data","error","loading","message","token","me"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AAEA,SAASC,eAAT,QAAgC,mCAAhC;;AASA,IAAMC,YAA6B,GAAG,SAAhCA,YAAgC,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACvBR,QAAQ,CAACK,sBAAD,CADe;AAAA,MAChDI,IADgD,aAChDA,IADgD;AAAA,MAC1CC,KAD0C,aAC1CA,KAD0C;AAAA,MACnCC,OADmC,aACnCA,OADmC;;AAExD,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACE,OAAZ,CAAP;AACX,MAAMC,KAAK,GAAG,MAAd;AAEA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,KAAK,EAAC,kCADR;AAEE,IAAA,WAAW,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEJ,IAAI,CAACK,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAwB,IAAA,UAAU,EAAEL,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALF,CADF;AAaD,CArBD;;AAuBA,eAAeN,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { NextPage } from 'next';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Modal } from '@redq/reuse-modal';\r\nimport { withApollo } from 'helper/apollo';\r\nimport { SEO } from 'components/seo';\r\nimport Checkout from 'containers/Checkout/Checkout';\r\nimport { GET_LOGGED_IN_CUSTOMER } from 'graphql/query/customer.query';\r\n\r\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\r\n\r\ntype Props = {\r\n  deviceType: {\r\n    mobile: boolean;\r\n    tablet: boolean;\r\n    desktop: boolean;\r\n  };\r\n};\r\nconst CheckoutPage: NextPage<Props> = ({ deviceType }) => {\r\n  const { data, error, loading } = useQuery(GET_LOGGED_IN_CUSTOMER);\r\n  if (loading) {\r\n    return <div>loading...</div>;\r\n  }\r\n  if (error) return <div>{error.message}</div>;\r\n  const token = 'true';\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title='Checkout Alternative - PickBazar'\r\n        description='Checkout Details'\r\n      />\r\n      <ProfileProvider initData={data.me}>\r\n        <Modal>\r\n          <Checkout token={token} deviceType={deviceType} />\r\n        </Modal>\r\n      </ProfileProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withApollo(CheckoutPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP_SOFTWARE_ENGINEERING\\\\FYP\\\\des\\\\packages\\\\shop\\\\components\\\\MedicineCard\\\\MedicineCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Image from 'components/Image/Image';\nimport { PlusOutline } from '../AllSvgIcon';\nimport { CardWrapper, ImageWrapper, InfoWrapper, Title, Price, Unit, CartButton, Counter } from './MedicineCard.style';\nimport { useCart } from 'contexts/cart/use-cart'; // import { Counter } from 'components/Counter/Counter';\n\nconst ProductCard = (_ref) => {\n  let {\n    title,\n    image,\n    weight,\n    price,\n    salePrice,\n    discountInPercent,\n    cartProducts,\n    addToCart,\n    updateCart,\n    value,\n    currency,\n    onChange,\n    increment,\n    decrement,\n    data,\n    deviceType,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  const {\n    addItem,\n    removeItem,\n    getItem,\n    isInCart\n  } = useCart();\n\n  const handleAddClick = e => {\n    e.stopPropagation();\n    addItem(data);\n  };\n\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    removeItem(data);\n  }; // console.log(items, 'product-card');\n\n\n  return __jsx(CardWrapper, {\n    onClick: onClick,\n    className: \"medicine-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(ImageWrapper, {\n    className: isInCart(data === null || data === void 0 ? void 0 : data.id) && 'overlay',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), !isInCart(data === null || data === void 0 ? void 0 : data.id) ? __jsx(CartButton, {\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(PlusOutline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }),\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }) : __jsx(Counter, {\n    value: getItem(data === null || data === void 0 ? void 0 : data.id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), __jsx(InfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, currency, price), __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, title), __jsx(Unit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, weight)));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["E:/FYP_SOFTWARE_ENGINEERING/FYP/des/packages/shop/components/MedicineCard/MedicineCard.tsx"],"names":["React","Image","PlusOutline","CardWrapper","ImageWrapper","InfoWrapper","Title","Price","Unit","CartButton","Counter","useCart","ProductCard","title","image","weight","price","salePrice","discountInPercent","cartProducts","addToCart","updateCart","value","currency","onChange","increment","decrement","data","deviceType","onClick","props","addItem","removeItem","getItem","isInCart","handleAddClick","e","stopPropagation","handleRemoveClick","id","position","quantity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Image from 'components/Image/Image';\r\nimport Button from '../Button/Button';\r\nimport { PlusOutline } from '../AllSvgIcon';\r\nimport {\r\n  CardWrapper,\r\n  ImageWrapper,\r\n  InfoWrapper,\r\n  Title,\r\n  Price,\r\n  Unit,\r\n  CartButton,\r\n  Counter,\r\n} from './MedicineCard.style';\r\nimport { useCart } from 'contexts/cart/use-cart';\r\n// import { Counter } from 'components/Counter/Counter';\r\n\r\ntype ProductCardProps = {\r\n  title: string;\r\n  image: any;\r\n  weight: string;\r\n  currency?: string;\r\n  description?: string;\r\n  price: number;\r\n  salePrice?: number;\r\n  discountInPercent?: number;\r\n  data?: any;\r\n  onClick?: (e: any) => void;\r\n  onChange?: (e: any) => void;\r\n  increment?: (e: any) => void;\r\n  decrement?: (e: any) => void;\r\n  cartProducts?: any;\r\n  addToCart?: any;\r\n  updateCart?: any;\r\n  value?: any;\r\n  deviceType?: any;\r\n};\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({\r\n  title,\r\n  image,\r\n  weight,\r\n  price,\r\n  salePrice,\r\n  discountInPercent,\r\n  cartProducts,\r\n  addToCart,\r\n  updateCart,\r\n  value,\r\n  currency,\r\n  onChange,\r\n  increment,\r\n  decrement,\r\n  data,\r\n  deviceType,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const { addItem, removeItem, getItem, isInCart } = useCart();\r\n\r\n  const handleAddClick = (e) => {\r\n    e.stopPropagation();\r\n    addItem(data);\r\n  };\r\n\r\n  const handleRemoveClick = (e) => {\r\n    e.stopPropagation();\r\n    removeItem(data);\r\n  };\r\n  // console.log(items, 'product-card');\r\n\r\n  return (\r\n    <CardWrapper onClick={onClick} className='medicine-card'>\r\n      <ImageWrapper className={isInCart(data?.id) && 'overlay'}>\r\n        <Image\r\n          url={image}\r\n          className='product-image'\r\n          style={{ position: 'relative' }}\r\n          alt={title}\r\n        />\r\n\r\n        {!isInCart(data?.id) ? (\r\n          <CartButton\r\n            iconPosition='left'\r\n            colors='primary'\r\n            size='small'\r\n            variant='outlined'\r\n            className='cart-button'\r\n            icon={<PlusOutline />}\r\n            onClick={handleAddClick}\r\n          />\r\n        ) : (\r\n          <Counter\r\n            value={getItem(data?.id).quantity}\r\n            onDecrement={handleRemoveClick}\r\n            onIncrement={handleAddClick}\r\n          />\r\n        )}\r\n      </ImageWrapper>\r\n      <InfoWrapper>\r\n        <Price>\r\n          {currency}\r\n          {price}\r\n        </Price>\r\n\r\n        <Title>{title}</Title>\r\n        <Unit>{weight}</Unit>\r\n      </InfoWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}